spring.application.name=client-service
server.port=8089

eureka.client.service-url.defaultZone=http://localhost:8888/eureka

#http://localhost:8080/auth/realms/my-first-app/.well-known/openid-configuration get info
spring.security.oauth2.client.provider.my-app.issuer-uri=http://localhost:8080/auth/realms/my-first-app
#spring.security.oauth2.client.provider.my-app.user-info-uri=http://localhost:8080/auth/realms/my-first-app/protocol/openid-connect/userinfo
#spring.security.oauth2.client.provider.my-app.authorization-uri=http://localhost:8080/auth/realms/my-first-app/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.my-app.token-uri=http://localhost:8080/auth/realms/my-first-app/protocol/openid-connect/token
#spring.security.oauth2.client.provider.my-app.jwk-set-uri=http://localhost:8080/auth/realms/my-first-app/protocol/openid-connect/certs
#spring.security.oauth2.client.provider.my-app.user-name-attribute=preferred_username

spring.security.oauth2.client.registration.my-app.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.my-app.client-id=application
spring.security.oauth2.client.registration.my-app.client-secret=b8e365a9-6a11-411f-8650-56a5ae958e7d
spring.security.oauth2.client.registration.my-app.scope=openid,profile,email
spring.security.oauth2.client.registration.my-app.redirect-uri=http://localhost:8089/login/oauth2/code/my-app

